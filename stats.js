// stats.js ‚Äî –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ¬´üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞¬ª (Telegraf) –±–µ–∑ axios, —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch

const STATS_URL   = process.env.CRM2_STATS_URL;   // URL Google Apps Script Web App
const STATS_TOKEN = process.env.CRM2_STATS_TOKEN; // –¢–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—à—å –≤ doGet(e)

const usd = (n) => `$${(Number(n) || 0).toFixed(2)}`;

async function fetchStats() {
  if (!STATS_URL || !STATS_TOKEN) {
    throw new Error('–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è CRM2_STATS_URL/CRM2_STATS_TOKEN –Ω–µ –∑–∞–¥–∞–Ω—ã');
  }

  // –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ ?action=stats&token=...
  const url = new URL(STATS_URL);
  url.searchParams.set('action', 'stats');
  url.searchParams.set('token', STATS_TOKEN);

  const res = await fetch(url, { method: 'GET' });
  let data;
  try {
    data = await res.json();
  } catch {
    throw new Error(`–û—Ç–≤–µ—Ç –Ω–µ JSON, HTTP ${res.status}`);
  }

  // –û–∂–∏–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç: { ok:true, today, week7, expMon, incMon, netMon }
  if (!res.ok || data?.ok !== true) {
    throw new Error(data?.error || `–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, HTTP ${res.status}`);
  }
  return data;
}

export function attachStatsHandlers(bot) {
  const sendStats = async (ctx) => {
    try {
      const s = await fetchStats();
      await ctx.reply(
        [
          `–†–∞—Å—Ö–æ–¥—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è: ${usd(s.today)}`,
          `–†–∞—Å—Ö–æ–¥—ã –∑–∞ 7 –¥–Ω–µ–π: ${usd(s.week7)}`,
          `–†–∞—Å—Ö–æ–¥—ã –∑–∞ –º–µ—Å—è—Ü: ${usd(s.expMon)}`,
          `–î–æ—Ö–æ–¥—ã –∑–∞ –º–µ—Å—è—Ü: ${usd(s.incMon)}`,
          `–ß–∏—Å—Ç—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–º–µ—Å—è—Ü): ${usd(s.netMon)}`
        ].join('\n')
      );
    } catch (err) {
      console.error('stats error:', err);
      await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É üòï');
    }
  };

  // –ö–æ–º–∞–Ω–¥–∞ /stats
  bot.command('stats', sendStats);

  // –ò –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏/—Å–æ–æ–±—â–µ–Ω–∏–µ ¬´üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞¬ª
  bot.hears('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', sendStats);
}
